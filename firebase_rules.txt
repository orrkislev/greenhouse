rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function getUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function hasRole(role) {
      let userData = getUser();
      return userData.roles != null && userData.roles.hasAny([role]);
    }

    function isSelf(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read;

      allow update: if hasRole("admin") || (
        isSelf(userId) &&
        request.resource.data.roles == resource.data.roles
      );

      allow create: if hasRole("admin") || isSelf(userId);
      
			match /{document=**} {
        allow read, write: if hasRole("admin") || isSelf(userId);
      }
    }

    // Allow anyone to read all other documents/collections, writable only by admins
    match /{document=**} {
      allow read: if true;
      allow write: if hasRole("admin");
    }
  }
}
